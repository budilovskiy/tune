package com.gmail.budilovskiy.maksim;

import java.awt.Color;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;

public class AppGUI extends javax.swing.JFrame implements PlayListener {

    private List<Track> topTracks;
    private SoundJLayer player;
    private boolean isPlaying;
    private String searchMethod = "tag.gettoptracks";

    /**
     * Creates new form AppGUI
     */
    public AppGUI() {
        initComponents();
        this.setIconImage(new ImageIcon(getClass().getResource("windowIcon.png")).getImage());
    }

    @Override
    public void PlayerStarts() {
        infoField.setText(player.getTrackInfo());
        isPlaying = true;
    }

    @Override
    public void PlayerStops() {
        playButton.enableInputMethods(true);
        isPlaying = false;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        searchButton = new javax.swing.JLabel();
        nextButton = new javax.swing.JLabel();
        playButton = new javax.swing.JLabel();
        stopButton = new javax.swing.JLabel();
        searchTextField = new javax.swing.JTextField();
        infoField = new javax.swing.JTextField();
        tagRadioButton = new javax.swing.JRadioButton();
        artistRadioButton = new javax.swing.JRadioButton();
        background = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("tune!");
        setName("mainFrame"); // NOI18N
        setResizable(false);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        searchButton.setFont(new java.awt.Font("Calibri", 1, 14)); // NOI18N
        searchButton.setForeground(new java.awt.Color(255, 255, 255));
        searchButton.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        searchButton.setText("Search");
        searchButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        searchButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        searchButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                searchButtonMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                searchButtonMouseReleased(evt);
            }
        });
        getContentPane().add(searchButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(302, 23, 98, 36));

        nextButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        nextButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                nextButtonMouseReleased(evt);
            }
        });
        getContentPane().add(nextButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(294, 92, 70, 70));

        playButton.setToolTipText("");
        playButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        playButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                playButtonMouseReleased(evt);
            }
        });
        getContentPane().add(playButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(168, 82, 90, 90));

        stopButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        stopButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                stopButtonMouseReleased(evt);
            }
        });
        getContentPane().add(stopButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 92, 70, 70));

        searchTextField.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        searchTextField.setForeground(new java.awt.Color(153, 153, 153));
        searchTextField.setText("enter tag or artist to search");
        searchTextField.setBorder(null);
        searchTextField.setOpaque(false);
        searchTextField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                searchTextFieldKeyTyped(evt);
            }
        });
        getContentPane().add(searchTextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(34, 28, 260, 30));

        infoField.setEditable(false);
        infoField.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        infoField.setForeground(new java.awt.Color(255, 255, 255));
        infoField.setHorizontalAlignment(javax.swing.JTextField.LEFT);
        infoField.setToolTipText("");
        infoField.setAutoscrolls(false);
        infoField.setBorder(null);
        infoField.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        infoField.setOpaque(false);
        getContentPane().add(infoField, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 203, 365, 30));

        tagRadioButton.setForeground(new java.awt.Color(255, 255, 255));
        tagRadioButton.setSelected(true);
        tagRadioButton.setText("Tag");
        tagRadioButton.setFocusPainted(false);
        tagRadioButton.setFocusable(false);
        tagRadioButton.setOpaque(false);
        tagRadioButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tagRadioButtonMouseClicked(evt);
            }
        });
        getContentPane().add(tagRadioButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(25, 3, -1, 20));

        artistRadioButton.setForeground(new java.awt.Color(255, 255, 255));
        artistRadioButton.setText("Artist");
        artistRadioButton.setFocusPainted(false);
        artistRadioButton.setFocusable(false);
        artistRadioButton.setOpaque(false);
        artistRadioButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                artistRadioButtonMouseClicked(evt);
            }
        });
        getContentPane().add(artistRadioButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 3, -1, 20));

        background.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/gmail/budilovskiy/maksim/background.png"))); // NOI18N
        getContentPane().add(background, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 426, 236));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void playButtonMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_playButtonMouseReleased
        try {
            if (!isPlaying) {
                player = new SoundJLayer(topTracks);
                play(topTracks);
                isPlaying = true;
            }
        } catch (NullPointerException ex) {
            Logger.getLogger(SoundJLayer.class.getName()).log(Level.SEVERE, null, ex);
            infoField.setText("There is nothing to play");
        }

    }//GEN-LAST:event_playButtonMouseReleased

    private void nextButtonMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_nextButtonMouseReleased
        try {
            if (isPlaying) {
                play(topTracks);
            }
        } catch (NullPointerException ex) {
            Logger.getLogger(SoundJLayer.class.getName()).log(Level.SEVERE, null, ex);
            // do nothing if player is null
        }

    }//GEN-LAST:event_nextButtonMouseReleased

    private void stopButtonMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_stopButtonMouseReleased
        try {
            player.stop();
        } catch (NullPointerException ex) {
            Logger.getLogger(SoundJLayer.class.getName()).log(Level.SEVERE, null, ex);
            // do nothing if player is null
        }
    }//GEN-LAST:event_stopButtonMouseReleased

    private void searchTextFieldKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_searchTextFieldKeyTyped
        if (searchTextField.getText().equals("enter tag or artist to search")) {
            searchTextField.setText("");
        }
        searchTextField.setForeground(Color.black);
    }//GEN-LAST:event_searchTextFieldKeyTyped

    private void tagRadioButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tagRadioButtonMouseClicked
        artistRadioButton.setSelected(false);
        tagRadioButton.setSelected(true);
        searchMethod = "tag.gettoptracks";
    }//GEN-LAST:event_tagRadioButtonMouseClicked

    private void artistRadioButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_artistRadioButtonMouseClicked
        tagRadioButton.setSelected(false);
        artistRadioButton.setSelected(true);
        searchMethod = "artist.gettoptracks";
    }//GEN-LAST:event_artistRadioButtonMouseClicked

    private void searchButtonMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_searchButtonMousePressed
        infoField.setText("Searching. Please wait");
    }//GEN-LAST:event_searchButtonMousePressed

    private void searchButtonMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_searchButtonMouseReleased
         topTracks = new TopTracks(searchTextField.getText(), searchMethod).getTopTracks();
        if (searchTextField.getText().equals("") || topTracks == null) {
            infoField.setText("There is no such tag or artist");
        } else {
            if (player != null) {
                player.stop();
            }
            infoField.setText("Searching complete");
        }
    }//GEN-LAST:event_searchButtonMouseReleased

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AppGUI.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AppGUI.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AppGUI.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AppGUI.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        final AppGUI frame = new AppGUI();
        SoundJLayer.addListener(frame);
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                frame.setVisible(true);
            }
        });
    }

    private void play(List<Track> playlist) throws NullPointerException {
        //player.stop();
        player.play(playlist);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JRadioButton artistRadioButton;
    private javax.swing.JLabel background;
    private javax.swing.JTextField infoField;
    private javax.swing.JLabel nextButton;
    private javax.swing.JLabel playButton;
    private javax.swing.JLabel searchButton;
    private javax.swing.JTextField searchTextField;
    private javax.swing.JLabel stopButton;
    private javax.swing.JRadioButton tagRadioButton;
    // End of variables declaration//GEN-END:variables
}
